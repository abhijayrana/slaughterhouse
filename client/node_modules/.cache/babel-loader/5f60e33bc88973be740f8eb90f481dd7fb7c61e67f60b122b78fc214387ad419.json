{"ast":null,"code":"var _jsxFileName = \"/Users/abhijayrana/slaughterhouse/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Box } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport Navbar from \"./components/universal/Navbar\";\nimport getTheme from \"./theme\";\nimport Landing from \"./components/pages/landing/Landing\";\nimport Programs from \"./components/pages/Programs\";\nimport Intern from \"./components/pages/intern/Intern\";\nimport AddProgram from \"./components/pages/admin/EnterProgram\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize to null; will update shortly\n  const [mode, setMode] = useState(null);\n  const theme = getTheme(mode);\n  useEffect(() => {\n    // Check if a mode is saved in local storage\n    const savedMode = localStorage.getItem('mode');\n    if (savedMode) {\n      // Use the saved mode\n      setMode(savedMode);\n    } else {\n      // Otherwise, check the system preference\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setMode(prefersDark ? 'dark' : 'light');\n    }\n\n    // Listen for changes in system preference\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = e => setMode(e.matches ? 'dark' : 'light');\n    mediaQuery.addEventListener('change', handleChange);\n\n    // Cleanup\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n  const toggleMode = () => {\n    const newMode = mode === 'light' ? 'dark' : 'light';\n    setMode(newMode);\n\n    // Save the new mode in local storage\n    localStorage.setItem('mode', newMode);\n  };\n  if (mode === null) {\n    // If mode is not yet determined, don't render the app\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: theme => ({\n        backgroundColor: theme.palette.background.default,\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vh\"\n      }),\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          toggleMode: toggleMode,\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          flex: \"1\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          height: \"92vh\",\n          width: \"100vw\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/programs\",\n              element: /*#__PURE__*/_jsxDEV(Programs, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/intern\",\n              element: /*#__PURE__*/_jsxDEV(Intern, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/admin\",\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/add-program\",\n                element: /*#__PURE__*/_jsxDEV(AddProgram, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kGJIAv9LfALpf5edH/H0dFqGArY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Box","ThemeProvider","Navbar","getTheme","Landing","Programs","Intern","AddProgram","useState","useEffect","jsxDEV","_jsxDEV","App","_s","mode","setMode","theme","savedMode","localStorage","getItem","prefersDark","window","matchMedia","matches","mediaQuery","handleChange","e","addEventListener","removeEventListener","toggleMode","newMode","setItem","children","sx","backgroundColor","palette","background","default","display","flexDirection","height","fileName","_jsxFileName","lineNumber","columnNumber","flex","justifyContent","width","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/abhijayrana/slaughterhouse/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Box } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport Navbar from \"./components/universal/Navbar\";\nimport getTheme from \"./theme\";\nimport Landing from \"./components/pages/landing/Landing\";\nimport Programs from \"./components/pages/Programs\";\nimport Intern from \"./components/pages/intern/Intern\";\nimport AddProgram from \"./components/pages/admin/EnterProgram\"\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  // Initialize to null; will update shortly\n  const [mode, setMode] = useState(null);\n  const theme = getTheme(mode);\n\n  useEffect(() => {\n    // Check if a mode is saved in local storage\n    const savedMode = localStorage.getItem('mode');\n\n    if (savedMode) {\n      // Use the saved mode\n      setMode(savedMode);\n    } else {\n      // Otherwise, check the system preference\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setMode(prefersDark ? 'dark' : 'light');\n    }\n\n    // Listen for changes in system preference\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e) => setMode(e.matches ? 'dark' : 'light');\n    mediaQuery.addEventListener('change', handleChange);\n\n    // Cleanup\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  const toggleMode = () => {\n    const newMode = mode === 'light' ? 'dark' : 'light';\n    setMode(newMode);\n\n    // Save the new mode in local storage\n    localStorage.setItem('mode', newMode);\n  };\n\n  if (mode === null) {\n    // If mode is not yet determined, don't render the app\n    return null;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box sx={(theme) => ({ backgroundColor: theme.palette.background.default, display: \"flex\", flexDirection: \"column\", height: \"100vh\" })}>\n        <Router>\n          <Navbar toggleMode={toggleMode} mode={mode} />\n          <Box\n            flex=\"1\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            height=\"92vh\"\n            width=\"100vw\"\n          >\n            <Routes>\n              <Route exact path=\"/\" element={<Landing />} />\n              <Route path=\"/programs\" element={<Programs />} />\n              <Route path=\"/intern\" element={<Intern />} />\n              <Route path=\"/admin\" >\n                <Route path=\"/add-program\" element={<AddProgram />} />\n              </Route>\n            </Routes>\n          </Box>\n        </Router>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}