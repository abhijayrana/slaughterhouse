{"ast":null,"code":"var _jsxFileName = \"/Users/abhijayrana/slaughterhouse/client/src/components/pages/admin/UploadSpreadsheet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelUpload = () => {\n  _s();\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      Papa.parse(file, {\n        complete: result => {\n          // Process your data here\n          const programs = result.data.map(row => ({\n            name: row[0],\n            organization: row[1],\n            description: row[2],\n            field: row[3],\n            eligibility: row[4],\n            type: row[5],\n            cost: row[6],\n            location: row[7],\n            virtual: row[8],\n            startDate: row[9],\n            endDate: row[10],\n            website: row[11],\n            applicationDeadline: row[12]\n          }));\n\n          // Send to backend\n          // Send to backend\n          fetch(\"/api/upload-programs\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              programs\n            })\n          }).then(res => res.json()).then(data => console.log(data)).catch(err => console.error(err));\n        }\n      });\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag 'n' drop some files here, or click to select files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelUpload, \"m2/zPeD393EJy9nRT3zys7UD7jw=\", false, function () {\n  return [useDropzone];\n});\n_c = ExcelUpload;\nexport default ExcelUpload;\nvar _c;\n$RefreshReg$(_c, \"ExcelUpload\");","map":{"version":3,"names":["React","useCallback","useDropzone","Papa","jsxDEV","_jsxDEV","ExcelUpload","_s","onDrop","acceptedFiles","forEach","file","parse","complete","result","programs","data","map","row","name","organization","description","field","eligibility","type","cost","location","virtual","startDate","endDate","website","applicationDeadline","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","catch","err","error","getRootProps","getInputProps","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhijayrana/slaughterhouse/client/src/components/pages/admin/UploadSpreadsheet.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Papa from \"papaparse\";\n\nconst ExcelUpload = () => {\n  const onDrop = useCallback((acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      Papa.parse(file, {\n        complete: (result) => {\n          // Process your data here\n          const programs = result.data.map((row) => ({\n            name: row[0],\n            organization: row[1],\n            description: row[2],\n            field: row[3],\n            eligibility: row[4],\n            type: row[5],\n            cost: row[6],\n            location: row[7],\n            virtual: row[8],\n            startDate: row[9],\n            endDate: row[10],\n            website: row[11],\n            applicationDeadline: row[12],\n          }));\n\n          // Send to backend\n          // Send to backend\n          fetch(\"/api/upload-programs\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ programs }),\n          })\n            .then((res) => res.json())\n            .then((data) => console.log(data))\n            .catch((err) => console.error(err));\n        },\n      });\n    });\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      <p>Drag 'n' drop some files here, or click to select files</p>\n    </div>\n  );\n};\n\nexport default ExcelUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,MAAM,GAAGP,WAAW,CAAEQ,aAAa,IAAK;IAC5CA,aAAa,CAACC,OAAO,CAAEC,IAAI,IAAK;MAC9BR,IAAI,CAACS,KAAK,CAACD,IAAI,EAAE;QACfE,QAAQ,EAAGC,MAAM,IAAK;UACpB;UACA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;YACzCC,IAAI,EAAED,GAAG,CAAC,CAAC,CAAC;YACZE,YAAY,EAAEF,GAAG,CAAC,CAAC,CAAC;YACpBG,WAAW,EAAEH,GAAG,CAAC,CAAC,CAAC;YACnBI,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC;YACbK,WAAW,EAAEL,GAAG,CAAC,CAAC,CAAC;YACnBM,IAAI,EAAEN,GAAG,CAAC,CAAC,CAAC;YACZO,IAAI,EAAEP,GAAG,CAAC,CAAC,CAAC;YACZQ,QAAQ,EAAER,GAAG,CAAC,CAAC,CAAC;YAChBS,OAAO,EAAET,GAAG,CAAC,CAAC,CAAC;YACfU,SAAS,EAAEV,GAAG,CAAC,CAAC,CAAC;YACjBW,OAAO,EAAEX,GAAG,CAAC,EAAE,CAAC;YAChBY,OAAO,EAAEZ,GAAG,CAAC,EAAE,CAAC;YAChBa,mBAAmB,EAAEb,GAAG,CAAC,EAAE;UAC7B,CAAC,CAAC,CAAC;;UAEH;UACA;UACAc,KAAK,CAAC,sBAAsB,EAAE;YAC5BC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEtB;YAAS,CAAC;UACnC,CAAC,CAAC,CACCuB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEtB,IAAI,IAAKyB,OAAO,CAACC,GAAG,CAAC1B,IAAI,CAAC,CAAC,CACjC2B,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;QACvC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEE,YAAY;IAAEC;EAAc,CAAC,GAAG7C,WAAW,CAAC;IAAEM;EAAO,CAAC,CAAC;EAE/D,oBACEH,OAAA;IAAA,GAASyC,YAAY,CAAC,CAAC;IAAAE,QAAA,gBACrB3C,OAAA;MAAA,GAAW0C,aAAa,CAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9B/C,OAAA;MAAA2C,QAAA,EAAG;IAAuD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA/CID,WAAW;EAAA,QAuCyBJ,WAAW;AAAA;AAAAmD,EAAA,GAvC/C/C,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}