{"ast":null,"code":"var _jsxFileName = \"/Users/abhijayrana/slaughterhouse/client/src/components/pages/Programs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, Select, MenuItem, Card, CardActionArea, CardContent, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Programs = () => {\n  _s();\n  const [programs, setPrograms] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/programs\").then(res => res.json()).then(data => {\n      console.log(\"Received data:\", data); // Log data here\n      setPrograms(data);\n      console.log(\"Programs:\", programs); // Log programs here\n    }).catch(err => console.error(\"Fetch error:\", err)); // Log error here\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Programs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: programs.map((program, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: program.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Organization: \", program.organization]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Description: \", program.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Field: \", JSON.stringify(program.field)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Eligibility: \", JSON.stringify(program.eligibility)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Type: \", program.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Cost: \", program.cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Salary: \", program.salary]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Location: \", program.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Virtual: \", String(program.virtual)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Website: \", program.website]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Start Date: \", program.startDate.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"End Date: \", program.endDate.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n_s(Programs, \"BI4cIxOHrxgvD5B/yfR+L8iEtRk=\");\n_c = Programs;\nexport default Programs;\n\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   Dialog,\n//   DialogActions,\n//   DialogContent,\n//   DialogTitle,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   MenuItem,\n//   Card,\n//   CardActionArea,\n//   CardContent,\n//   Typography,\n// } from \"@mui/material\";\n\n// const realprograms = [ \n//   {\n//     name: \"Program 1\",\n//     organization: \"Organization 1\",\n//     description: \"Description 1\",\n//     field: \"Technology\",\n//     eligibility: 9,\n//     type: \"Type 1\",\n//     cost: \"Free\",\n//     salary: 100,\n//     location: \"Location 1\",\n//     virtual: true,\n//     website: \"Website 1\",\n//     startDate: \"2021-10-01\",\n//     endDate: \"2021-10-31\",\n//     applicationDeadline: \"2021-09-30\",\n//   },\n// ]\n\n// const fieldOptions = [\"Technology\", \"Healthcare\", \"Finance\", \"Education\"];\n// const eligibilityOptions = [9, 10, 11, 12];\n// const virtualOptions = [true, false];\n// // const costOptions = [\"Free\", \"$100-$500\", \"$500-$1000\", \">$1000\"];\n\n// function Programs() {\n//   const [open, setOpen] = useState(false);\n//   const [programs, setPrograms] = useState([]);\n//   const [selectedProgram, setSelectedProgram] = useState(null);\n//   const [filters, setFilters] = useState({\n//     field: \"\",\n//     eligibility: \"\",\n//     virtual: ``,\n//     // cost: \"\",\n//   });\n\n//   const [filteredPrograms, setFilteredPrograms] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"/api/programs\")\n//       .then((res) => res.json())\n//       .then((data) => {\n//         console.log(\"Received data:\", data); // Log data here\n//         setPrograms(data);\n//         console.log(\"Programs:\", programs); // Log programs here\n//         setFilteredPrograms(data);\n//       })\n//       .catch((err) => console.error(\"Fetch error:\", err)); // Log error here\n//   }, []);\n\n//   useEffect(() => {\n//     console.log(\"Filtered programs\", filteredPrograms);\n//   }, [filteredPrograms]);\n\n//   useEffect(() => {\n//     // Filter logic\n//     if (Array.isArray(programs)) {\n//       const newFilteredPrograms = programs.filter((program) => {\n//         return Object.keys(filters).every((key) => {\n//           if (Array.isArray(program[key])) {\n//             return !filters[key] || program[key].includes(filters[key]);\n//           } else {\n//             return !filters[key] || filters[key] === program[key];\n//           }\n//         });\n//       });\n//       console.log(\"Filtered programs:\", newFilteredPrograms); // Log filtered programs here\n//       setFilteredPrograms(newFilteredPrograms);\n//     }\n//   }, [filters]);\n\n//   const handleOpen = (program) => {\n//     setSelectedProgram(program);\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   const handleFilterChange = (event) => {\n//     const { name, value } = event.target;\n//     setFilters((prevFilters) => ({ ...prevFilters, [name]: value }));\n//   };\n\n//   const resetFilters = () => {\n//     setFilters({\n//       field: \"\",\n//       eligibility: \"\",\n//       virtual: \"\",\n//       // cost: \"\",\n//     });\n//   };\n\n//   return (\n//     <Box\n//       sx={{\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\",\n//         width: \"100%\",\n//       }}\n//     >\n//       <Box\n//         sx={{\n//           marginBottom: 2,\n//           width: \"80%\",\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//         }}\n//       >\n//         <FormControl variant=\"outlined\" sx={{ marginRight: 1, flex: 1 }}>\n//           <InputLabel>Field</InputLabel>\n//           <Select\n//             name=\"field\"\n//             value={filters.field}\n//             onChange={handleFilterChange}\n//           >\n//             <MenuItem value=\"\">\n//               <em>None</em>\n//             </MenuItem>\n//             {fieldOptions.map((option, index) => (\n//               <MenuItem value={option} key={index}>\n//                 {option}\n//               </MenuItem>\n//             ))}\n//           </Select>\n//         </FormControl>\n\n//         <FormControl variant=\"outlined\" sx={{ marginRight: 1, flex: 1 }}>\n//           <InputLabel>Eligibility</InputLabel>\n//           <Select\n//             name=\"eligibility\"\n//             value={filters.eligibility}\n//             onChange={handleFilterChange}\n//           >\n//             <MenuItem value=\"\">\n//               <em>None</em>\n//             </MenuItem>\n//             {eligibilityOptions.map((option, index) => (\n//               <MenuItem value={option} key={index}>\n//                 {option.toString()} {/* Convert number to string */}\n//               </MenuItem>\n//             ))}\n//           </Select>\n//         </FormControl>\n\n//         <FormControl variant=\"outlined\" sx={{ marginRight: 1, flex: 1 }}>\n//           <InputLabel>Virtual</InputLabel>\n//           <Select\n//             name=\"virtual\"\n//             value={filters.virtual}\n//             onChange={handleFilterChange}\n//           >\n//             <MenuItem value=\"\">\n//               <em>None</em>\n//             </MenuItem>\n//             {virtualOptions.map((option, index) => (\n//               <MenuItem value={option} key={index}>\n//                 {option ? \"Yes\" : \"No\"} {/* Convert boolean to string */}\n//               </MenuItem>\n//             ))}\n//           </Select>\n//         </FormControl>\n\n//         {/* <FormControl variant=\"outlined\" sx={{ marginRight: 1, flex: 1 }}>\n//           <InputLabel>Cost</InputLabel>\n//           <Select\n//             name=\"cost\"\n//             value={filters.cost}\n//             onChange={handleFilterChange}\n//           >\n//             <MenuItem value=\"\">\n//               <em>None</em>\n//             </MenuItem>\n//             {costOptions.map((option, index) => (\n//               <MenuItem value={option} key={index}>\n//                 {option}\n//               </MenuItem>\n//             ))}\n//           </Select>\n//         </FormControl> */}\n\n//         <Button variant=\"outlined\" sx={{ flex: 0.8 }} onClick={resetFilters}>\n//           Reset Filters\n//         </Button>\n//       </Box>\n\n//       <Box\n//         sx={{\n//           width: \"100%\",\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//         }}\n//       > \n\n//         {filteredPrograms.length > 0 ? (\n//           filteredPrograms.map((program, index) => (\n//             <Card\n//               key={index}\n//               sx={{\n//                 width: \"80%\",\n//                 marginBottom: 2,\n//                 backgroundColor: (theme) => theme.palette.background.default,\n//                 color: (theme) => theme.palette.text.primary,\n//               }}\n//             >\n//               <CardActionArea onClick={() => handleOpen(program)}>\n//                 <CardContent>\n//                   <Typography variant=\"h5\" component=\"div\">\n//                     {program.name}\n//                   </Typography>\n//                   <Typography\n//                     sx={{ fontSize: 14 }}\n//                     color=\"text.secondary\"\n//                     gutterBottom\n//                   >\n//                     {program.field} | {program.cost}\n//                   </Typography>\n//                 </CardContent>\n//               </CardActionArea>\n//             </Card>\n//           ))\n//         ) : (\n//           <Typography variant=\"h6\" component=\"div\">\n//             No programs found.\n//           </Typography>\n//         )}\n//       </Box>\n\n//       <Dialog open={open} onClose={handleClose}>\n//         <DialogTitle\n//           sx={{\n//             backgroundColor: (theme) => theme.palette.background.default,\n//             color: (theme) => theme.palette.text.primary,\n//           }}\n//         >\n//           {selectedProgram?.name}\n//         </DialogTitle>\n//         <DialogContent\n//           sx={{\n//             backgroundColor: (theme) => theme.palette.background.default,\n//             color: (theme) => theme.palette.text.primary,\n//           }}\n//         >\n//           <Typography variant=\"body1\">\n//             <strong>Name:</strong> {selectedProgram?.name}\n//             <br />\n//             <strong>Organization:</strong> {selectedProgram?.organization}\n//             <br />\n//             <strong>Description:</strong> {selectedProgram?.description}\n//             <br />\n//             <strong>Field:</strong> {selectedProgram?.field}\n//             <br />\n//             <strong>Eligibility:</strong> {selectedProgram?.eligibility}\n//             <br />\n//             <strong>Type:</strong> {selectedProgram?.type}\n//             <br />\n//             <strong>Cost:</strong> {selectedProgram?.cost}\n//             <br />\n//             <strong>Salary:</strong> {selectedProgram?.salary}\n//             <br />\n//             <strong>Location:</strong> {selectedProgram?.location}\n//             <br />\n//             <strong>Virtual:</strong> {selectedProgram?.virtual ? \"Yes\" : \"No\"}\n//             <br />\n//             <strong>Website:</strong>\n//             <a\n//               href={selectedProgram?.website}\n//               target=\"_blank\"\n//               rel=\"noreferrer\"\n//               style={{ color: \"inherit\" }}\n//             >\n//               {selectedProgram?.website}\n//             </a>\n//             <br />\n//             <strong>Start Date:</strong> {selectedProgram?.startDate}\n//             <br />\n//             <strong>End Date:</strong> {selectedProgram?.endDate}\n//             <br />\n//             <strong>Application Deadline:</strong>{\" \"}\n//             {selectedProgram?.applicationDeadline}\n//             <br />\n//           </Typography>\n//         </DialogContent>\n//         <DialogActions\n//           sx={{\n//             backgroundColor: (theme) => theme.palette.background.default,\n//             color: (theme) => theme.palette.text.primary,\n//           }}\n//         >\n//           <Button onClick={handleClose}>Close</Button>\n//         </DialogActions>\n//       </Dialog>\n//     </Box>\n//   );\n// }\n\n// export default Programs;\nvar _c;\n$RefreshReg$(_c, \"Programs\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","InputLabel","Select","MenuItem","Card","CardActionArea","CardContent","Typography","jsxDEV","_jsxDEV","Programs","_s","programs","setPrograms","fetch","then","res","json","data","console","log","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","program","index","name","organization","description","JSON","stringify","field","eligibility","type","cost","salary","location","String","virtual","website","startDate","toString","endDate","_c","$RefreshReg$"],"sources":["/Users/abhijayrana/slaughterhouse/client/src/components/pages/Programs.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, Select, MenuItem, Card, CardActionArea, CardContent, Typography } from '@mui/material';\n\nconst Programs = () => {\n    const [programs, setPrograms] = useState([]);\n\n    useEffect(() => {\n      fetch(\"/api/programs\")\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(\"Received data:\", data); // Log data here\n          setPrograms(data);\n          console.log(\"Programs:\", programs); // Log programs here\n        })\n        .catch((err) => console.error(\"Fetch error:\", err)); // Log error here\n    }\n    , []);\n\n    return (\n      <Box>\n        <h1>Programs</h1>\n        <ul>\n          {programs.map((program, index) => (\n            <li key={index}>\n              <strong>{program.name}</strong>\n              <ul>\n                <li>Organization: {program.organization}</li>\n                <li>Description: {program.description}</li>\n                <li>Field: {JSON.stringify(program.field)}</li>\n                <li>Eligibility: {JSON.stringify(program.eligibility)}</li>\n                <li>Type: {program.type}</li>\n                <li>Cost: {program.cost}</li>\n                <li>Salary: {program.salary}</li>\n                <li>Location: {program.location}</li>\n                <li>Virtual: {String(program.virtual)}</li>\n                <li>Website: {program.website}</li>\n                <li>Start Date: {program.startDate.toString()}</li>\n                <li>End Date: {program.endDate.toString()}</li>\n              </ul>\n            </li>\n          ))}\n        </ul>\n        \n      </Box>\n    );\n}\n\nexport default Programs;\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   Dialog,\n//   DialogActions,\n//   DialogContent,\n//   DialogTitle,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   MenuItem,\n//   Card,\n//   CardActionArea,\n//   CardContent,\n//   Typography,\n// } from \"@mui/material\";\n\n// const realprograms = [ \n//   {\n//     name: \"Program 1\",\n//     organization: \"Organization 1\",\n//     description: \"Description 1\",\n//     field: \"Technology\",\n//     eligibility: 9,\n//     type: \"Type 1\",\n//     cost: \"Free\",\n//     salary: 100,\n//     location: \"Location 1\",\n//     virtual: true,\n//     website: \"Website 1\",\n//     startDate: \"2021-10-01\",\n//     endDate: \"2021-10-31\",\n//     applicationDeadline: \"2021-09-30\",\n//   },\n// ]\n\n// const fieldOptions = [\"Technology\", \"Healthcare\", \"Finance\", \"Education\"];\n// const eligibilityOptions = [9, 10, 11, 12];\n// const virtualOptions = [true, false];\n// // const costOptions = [\"Free\", \"$100-$500\", \"$500-$1000\", \">$1000\"];\n\n// function Programs() {\n//   const [open, setOpen] = useState(false);\n//   const [programs, setPrograms] = useState([]);\n//   const [selectedProgram, setSelectedProgram] = useState(null);\n//   const [filters, setFilters] = useState({\n//     field: \"\",\n//     eligibility: \"\",\n//     virtual: ``,\n//     // cost: \"\",\n//   });\n\n//   const [filteredPrograms, setFilteredPrograms] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"/api/programs\")\n//       .then((res) => res.json())\n//       .then((data) => {\n//         console.log(\"Received data:\", data); // Log data here\n//         setPrograms(data);\n//         console.log(\"Programs:\", programs); // Log programs here\n//         setFilteredPrograms(data);\n//       })\n//       .catch((err) => console.error(\"Fetch error:\", err)); // Log error here\n//   }, []);\n\n//   useEffect(() => {\n//     console.log(\"Filtered programs\", filteredPrograms);\n//   }, [filteredPrograms]);\n\n//   useEffect(() => {\n//     // Filter logic\n//     if (Array.isArray(programs)) {\n//       const newFilteredPrograms = programs.filter((program) => {\n//         return Object.keys(filters).every((key) => {\n//           if (Array.isArray(program[key])) {\n//             return !filters[key] || program[key].includes(filters[key]);\n//           } else {\n//             return !filters[key] || filters[key] === program[key];\n//           }\n//         });\n//       });\n//       console.log(\"Filtered programs:\", newFilteredPrograms); // Log filtered programs here\n//       setFilteredPrograms(newFilteredPrograms);\n//     }\n//   }, [filters]);\n\n//   const handleOpen = (program) => {\n//     setSelectedProgram(program);\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   const handleFilterChange = (event) => {\n//     const { name, value } = event.target;\n//     setFilters((prevFilters) => ({ ...prevFilters, [name]: value }));\n//   };\n\n//   const resetFilters = () => {\n//     setFilters({\n//       field: \"\",\n//       eligibility: \"\",\n//       virtual: \"\",\n//       // cost: \"\",\n//     });\n//   };\n\n//   return (\n//     <Box\n//       sx={{\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\",\n//         width: \"100%\",\n//       }}\n//     >\n//       <Box\n//         sx={{\n//           marginBottom: 2,\n//           width: \"80%\",\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//         }}\n//       >\n//         <FormControl variant=\"outlined\" sx={{ marginRight: 1, flex: 1 }}>\n//           <InputLabel>Field</InputLabel>\n//           <Select\n//             name=\"field\"\n//             value={filters.field}\n//             onChange={handleFilterChange}\n//           >\n//             <MenuItem value=\"\">\n//               <em>None</em>\n//             </MenuItem>\n//             {fieldOptions.map((option, index) => (\n//               <MenuItem value={option} key={index}>\n//                 {option}\n//               </MenuItem>\n//             ))}\n//           </Select>\n//         </FormControl>\n\n//         <FormControl variant=\"outlined\" sx={{ marginRight: 1, flex: 1 }}>\n//           <InputLabel>Eligibility</InputLabel>\n//           <Select\n//             name=\"eligibility\"\n//             value={filters.eligibility}\n//             onChange={handleFilterChange}\n//           >\n//             <MenuItem value=\"\">\n//               <em>None</em>\n//             </MenuItem>\n//             {eligibilityOptions.map((option, index) => (\n//               <MenuItem value={option} key={index}>\n//                 {option.toString()} {/* Convert number to string */}\n//               </MenuItem>\n//             ))}\n//           </Select>\n//         </FormControl>\n\n//         <FormControl variant=\"outlined\" sx={{ marginRight: 1, flex: 1 }}>\n//           <InputLabel>Virtual</InputLabel>\n//           <Select\n//             name=\"virtual\"\n//             value={filters.virtual}\n//             onChange={handleFilterChange}\n//           >\n//             <MenuItem value=\"\">\n//               <em>None</em>\n//             </MenuItem>\n//             {virtualOptions.map((option, index) => (\n//               <MenuItem value={option} key={index}>\n//                 {option ? \"Yes\" : \"No\"} {/* Convert boolean to string */}\n//               </MenuItem>\n//             ))}\n//           </Select>\n//         </FormControl>\n\n//         {/* <FormControl variant=\"outlined\" sx={{ marginRight: 1, flex: 1 }}>\n//           <InputLabel>Cost</InputLabel>\n//           <Select\n//             name=\"cost\"\n//             value={filters.cost}\n//             onChange={handleFilterChange}\n//           >\n//             <MenuItem value=\"\">\n//               <em>None</em>\n//             </MenuItem>\n//             {costOptions.map((option, index) => (\n//               <MenuItem value={option} key={index}>\n//                 {option}\n//               </MenuItem>\n//             ))}\n//           </Select>\n//         </FormControl> */}\n\n//         <Button variant=\"outlined\" sx={{ flex: 0.8 }} onClick={resetFilters}>\n//           Reset Filters\n//         </Button>\n//       </Box>\n\n//       <Box\n//         sx={{\n//           width: \"100%\",\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//         }}\n//       > \n\n//         {filteredPrograms.length > 0 ? (\n//           filteredPrograms.map((program, index) => (\n//             <Card\n//               key={index}\n//               sx={{\n//                 width: \"80%\",\n//                 marginBottom: 2,\n//                 backgroundColor: (theme) => theme.palette.background.default,\n//                 color: (theme) => theme.palette.text.primary,\n//               }}\n//             >\n//               <CardActionArea onClick={() => handleOpen(program)}>\n//                 <CardContent>\n//                   <Typography variant=\"h5\" component=\"div\">\n//                     {program.name}\n//                   </Typography>\n//                   <Typography\n//                     sx={{ fontSize: 14 }}\n//                     color=\"text.secondary\"\n//                     gutterBottom\n//                   >\n//                     {program.field} | {program.cost}\n//                   </Typography>\n//                 </CardContent>\n//               </CardActionArea>\n//             </Card>\n//           ))\n//         ) : (\n//           <Typography variant=\"h6\" component=\"div\">\n//             No programs found.\n//           </Typography>\n//         )}\n//       </Box>\n\n//       <Dialog open={open} onClose={handleClose}>\n//         <DialogTitle\n//           sx={{\n//             backgroundColor: (theme) => theme.palette.background.default,\n//             color: (theme) => theme.palette.text.primary,\n//           }}\n//         >\n//           {selectedProgram?.name}\n//         </DialogTitle>\n//         <DialogContent\n//           sx={{\n//             backgroundColor: (theme) => theme.palette.background.default,\n//             color: (theme) => theme.palette.text.primary,\n//           }}\n//         >\n//           <Typography variant=\"body1\">\n//             <strong>Name:</strong> {selectedProgram?.name}\n//             <br />\n//             <strong>Organization:</strong> {selectedProgram?.organization}\n//             <br />\n//             <strong>Description:</strong> {selectedProgram?.description}\n//             <br />\n//             <strong>Field:</strong> {selectedProgram?.field}\n//             <br />\n//             <strong>Eligibility:</strong> {selectedProgram?.eligibility}\n//             <br />\n//             <strong>Type:</strong> {selectedProgram?.type}\n//             <br />\n//             <strong>Cost:</strong> {selectedProgram?.cost}\n//             <br />\n//             <strong>Salary:</strong> {selectedProgram?.salary}\n//             <br />\n//             <strong>Location:</strong> {selectedProgram?.location}\n//             <br />\n//             <strong>Virtual:</strong> {selectedProgram?.virtual ? \"Yes\" : \"No\"}\n//             <br />\n//             <strong>Website:</strong>\n//             <a\n//               href={selectedProgram?.website}\n//               target=\"_blank\"\n//               rel=\"noreferrer\"\n//               style={{ color: \"inherit\" }}\n//             >\n//               {selectedProgram?.website}\n//             </a>\n//             <br />\n//             <strong>Start Date:</strong> {selectedProgram?.startDate}\n//             <br />\n//             <strong>End Date:</strong> {selectedProgram?.endDate}\n//             <br />\n//             <strong>Application Deadline:</strong>{\" \"}\n//             {selectedProgram?.applicationDeadline}\n//             <br />\n//           </Typography>\n//         </DialogContent>\n//         <DialogActions\n//           sx={{\n//             backgroundColor: (theme) => theme.palette.background.default,\n//             color: (theme) => theme.palette.text.primary,\n//           }}\n//         >\n//           <Button onClick={handleClose}>Close</Button>\n//         </DialogActions>\n//       </Dialog>\n//     </Box>\n//   );\n// }\n\n// export default Programs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}