{"ast":null,"code":"var _jsxFileName = \"/Users/abhijayrana/slaughterhouse/client/src/components/pages/admin/UploadSpreadsheet.jsx\";\nimport React from \"react\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelUpload = () => {\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        complete: result => {\n          const programs = result.data.map(row => ({\n            name: row[0],\n            organization: row[1],\n            description: row[2],\n            field: row[3],\n            eligibility: row[4],\n            type: row[5],\n            cost: row[6],\n            location: row[7],\n            virtual: row[8],\n            startDate: row[9],\n            endDate: row[10],\n            website: row[11],\n            applicationDeadline: row[12]\n          }));\n          fetch(\"/api/upload-programs\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              programs\n            })\n          }).then(res => res.json()).then(data => console.log(data)).catch(err => console.error(err));\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click to select files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = ExcelUpload;\nexport default ExcelUpload;\nvar _c;\n$RefreshReg$(_c, \"ExcelUpload\");","map":{"version":3,"names":["React","Papa","jsxDEV","_jsxDEV","ExcelUpload","handleFileChange","e","file","target","files","parse","complete","result","programs","data","map","row","name","organization","description","field","eligibility","type","cost","location","virtual","startDate","endDate","website","applicationDeadline","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","catch","err","error","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhijayrana/slaughterhouse/client/src/components/pages/admin/UploadSpreadsheet.jsx"],"sourcesContent":["import React from \"react\";\nimport Papa from \"papaparse\";\n\nconst ExcelUpload = () => {\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        complete: (result) => {\n          const programs = result.data.map((row) => ({\n            name: row[0],\n            organization: row[1],\n            description: row[2],\n            field: row[3],\n            eligibility: row[4],\n            type: row[5],\n            cost: row[6],\n            location: row[7],\n            virtual: row[8],\n            startDate: row[9],\n            endDate: row[10],\n            website: row[11],\n            applicationDeadline: row[12],\n          }));\n\n          fetch(\"/api/upload-programs\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ programs }),\n          })\n            .then((res) => res.json())\n            .then((data) => console.log(data))\n            .catch((err) => console.error(err));\n        },\n      });\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} />\n      <p>Click to select files</p>\n    </div>\n  );\n};\n\nexport default ExcelUpload;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACRN,IAAI,CAACS,KAAK,CAACH,IAAI,EAAE;QACfI,QAAQ,EAAGC,MAAM,IAAK;UACpB,MAAMC,QAAQ,GAAGD,MAAM,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;YACzCC,IAAI,EAAED,GAAG,CAAC,CAAC,CAAC;YACZE,YAAY,EAAEF,GAAG,CAAC,CAAC,CAAC;YACpBG,WAAW,EAAEH,GAAG,CAAC,CAAC,CAAC;YACnBI,KAAK,EAAEJ,GAAG,CAAC,CAAC,CAAC;YACbK,WAAW,EAAEL,GAAG,CAAC,CAAC,CAAC;YACnBM,IAAI,EAAEN,GAAG,CAAC,CAAC,CAAC;YACZO,IAAI,EAAEP,GAAG,CAAC,CAAC,CAAC;YACZQ,QAAQ,EAAER,GAAG,CAAC,CAAC,CAAC;YAChBS,OAAO,EAAET,GAAG,CAAC,CAAC,CAAC;YACfU,SAAS,EAAEV,GAAG,CAAC,CAAC,CAAC;YACjBW,OAAO,EAAEX,GAAG,CAAC,EAAE,CAAC;YAChBY,OAAO,EAAEZ,GAAG,CAAC,EAAE,CAAC;YAChBa,mBAAmB,EAAEb,GAAG,CAAC,EAAE;UAC7B,CAAC,CAAC,CAAC;UAEHc,KAAK,CAAC,sBAAsB,EAAE;YAC5BC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEtB;YAAS,CAAC;UACnC,CAAC,CAAC,CACCuB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEtB,IAAI,IAAKyB,OAAO,CAACC,GAAG,CAAC1B,IAAI,CAAC,CAAC,CACjC2B,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;QACvC;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEvC,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACuB,QAAQ,EAAExC;IAAiB;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD9C,OAAA;MAAAyC,QAAA,EAAG;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACC,EAAA,GA3CI9C,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}