{"ast":null,"code":"var _jsxFileName = \"/Users/abhijayrana/slaughterhouse/client/src/components/pages/admin/UploadSpreadsheet.jsx\";\nimport React from \"react\";\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadSpreadsheet = () => {\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = evt => {\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, {\n        type: \"binary\"\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws);\n      const programs = data.map(row => {\n        console.log(\"Value of date1:\", row[\"StartDate\"]); // Log value of row[\"Virtual\"]\n\n        return {\n          name: row[\"Name\"],\n          organization: row[\"Organization\"],\n          description: row[\"Description\"],\n          field: JSON.parse(row[\"Field\"]),\n          eligibility: JSON.parse(row['Eligibility']).map(Number),\n          type: row[\"Type\"],\n          cost: parseInt(row[\"Cost\"], 10),\n          location: row[\"Location\"],\n          virtual: row[\"Virtual\"],\n          // Converts \"TRUE\" or \"FALSE\" to boolean\n          startDate: new Date(row[\"StartDate\"]),\n          endDate: new Date(row[\"EndDate\"]),\n          website: row[\"Website\"],\n          applicationDeadline: new Date(row[\"ApplicationDate\"])\n        };\n      });\n      console.log(programs);\n\n      //   // Send to backend\n      //   fetch(\"/api/upload-programs\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       \"Content-Type\": \"application/json\",\n      //     },\n      //     body: JSON.stringify({ programs }),\n      //   })\n      //   .then((res) => res.json())\n      //   .then((data) => console.log(data))\n      //   .catch((err) => console.error(err));\n    };\n\n    reader.readAsBinaryString(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx,.xls\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = UploadSpreadsheet;\nexport default UploadSpreadsheet;\nvar _c;\n$RefreshReg$(_c, \"UploadSpreadsheet\");","map":{"version":3,"names":["React","XLSX","jsxDEV","_jsxDEV","UploadSpreadsheet","handleFileChange","e","file","target","files","reader","FileReader","onload","evt","bstr","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","programs","map","row","console","log","name","organization","description","field","JSON","parse","eligibility","Number","cost","parseInt","location","virtual","startDate","Date","endDate","website","applicationDeadline","readAsBinaryString","children","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhijayrana/slaughterhouse/client/src/components/pages/admin/UploadSpreadsheet.jsx"],"sourcesContent":["import React from \"react\";\nimport * as XLSX from 'xlsx';\n\nconst UploadSpreadsheet = () => {\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws);\n      const programs = data.map((row) => {\n        console.log(\"Value of date1:\", row[\"StartDate\"]);  // Log value of row[\"Virtual\"]\n        \n        return {\n          name: row[\"Name\"],\n          organization: row[\"Organization\"],\n          description: row[\"Description\"],\n          field: JSON.parse(row[\"Field\"]),\n          eligibility: JSON.parse(row['Eligibility']).map(Number),\n          type: row[\"Type\"],\n          cost: parseInt(row[\"Cost\"], 10),\n          location: row[\"Location\"],\n          virtual: row[\"Virtual\"],  // Converts \"TRUE\" or \"FALSE\" to boolean\n          startDate: new Date(row[\"StartDate\"]),\n          endDate: new Date(row[\"EndDate\"]),\n          website: row[\"Website\"],\n          applicationDeadline: new Date(row[\"ApplicationDate\"]),\n        };\n      });\n      \n      console.log(programs);\n      \n    //   // Send to backend\n    //   fetch(\"/api/upload-programs\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({ programs }),\n    //   })\n    //   .then((res) => res.json())\n    //   .then((data) => console.log(data))\n    //   .catch((err) => console.error(err));\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\".xlsx,.xls\" onChange={handleFileChange} />\n    </div>\n  );\n};\n\nexport default UploadSpreadsheet;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,GAAG,IAAK;MACvB,MAAMC,IAAI,GAAGD,GAAG,CAACL,MAAM,CAACO,MAAM;MAC9B,MAAMC,EAAE,GAAGf,IAAI,CAACgB,IAAI,CAACH,IAAI,EAAE;QAAEI,IAAI,EAAE;MAAS,CAAC,CAAC;MAC9C,MAAMC,MAAM,GAAGH,EAAE,CAACI,UAAU,CAAC,CAAC,CAAC;MAC/B,MAAMC,EAAE,GAAGL,EAAE,CAACM,MAAM,CAACH,MAAM,CAAC;MAC5B,MAAMI,IAAI,GAAGtB,IAAI,CAACuB,KAAK,CAACC,aAAa,CAACJ,EAAE,CAAC;MACzC,MAAMK,QAAQ,GAAGH,IAAI,CAACI,GAAG,CAAEC,GAAG,IAAK;QACjCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAE;;QAEnD,OAAO;UACLG,IAAI,EAAEH,GAAG,CAAC,MAAM,CAAC;UACjBI,YAAY,EAAEJ,GAAG,CAAC,cAAc,CAAC;UACjCK,WAAW,EAAEL,GAAG,CAAC,aAAa,CAAC;UAC/BM,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACR,GAAG,CAAC,OAAO,CAAC,CAAC;UAC/BS,WAAW,EAAEF,IAAI,CAACC,KAAK,CAACR,GAAG,CAAC,aAAa,CAAC,CAAC,CAACD,GAAG,CAACW,MAAM,CAAC;UACvDpB,IAAI,EAAEU,GAAG,CAAC,MAAM,CAAC;UACjBW,IAAI,EAAEC,QAAQ,CAACZ,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;UAC/Ba,QAAQ,EAAEb,GAAG,CAAC,UAAU,CAAC;UACzBc,OAAO,EAAEd,GAAG,CAAC,SAAS,CAAC;UAAG;UAC1Be,SAAS,EAAE,IAAIC,IAAI,CAAChB,GAAG,CAAC,WAAW,CAAC,CAAC;UACrCiB,OAAO,EAAE,IAAID,IAAI,CAAChB,GAAG,CAAC,SAAS,CAAC,CAAC;UACjCkB,OAAO,EAAElB,GAAG,CAAC,SAAS,CAAC;UACvBmB,mBAAmB,EAAE,IAAIH,IAAI,CAAChB,GAAG,CAAC,iBAAiB,CAAC;QACtD,CAAC;MACH,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;;MAEvB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAAC;;IACDhB,MAAM,CAACsC,kBAAkB,CAACzC,IAAI,CAAC;EACjC,CAAC;EAED,oBACEJ,OAAA;IAAA8C,QAAA,eACE9C,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACgC,MAAM,EAAC,YAAY;MAACC,QAAQ,EAAE9C;IAAiB;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAACC,EAAA,GApDIpD,iBAAiB;AAsDvB,eAAeA,iBAAiB;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}